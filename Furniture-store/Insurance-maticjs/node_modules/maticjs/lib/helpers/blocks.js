"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHeaders = getHeaders;
exports.getBlockHeader = getBlockHeader;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _ethereumjsUtil = _interopRequireDefault(require("ethereumjs-util"));

var sha3 = _ethereumjsUtil.default.sha3;
var BN = _ethereumjsUtil.default.BN;

function getHeaders(_x, _x2, _x3) {
  return _getHeaders.apply(this, arguments);
}

function _getHeaders() {
  _getHeaders = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(start, end, web3) {
    var current, p, result, i;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(start >= end)) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return", []);

          case 2:
            current = start;
            p = [];
            result = [];

          case 5:
            if (!(current <= end)) {
              _context.next = 19;
              break;
            }

            p = [];

            for (i = 0; i < 10 && current <= end; i++) {
              p.push(web3.eth.getBlock(current));
              current++;
            }

            if (!(p.length > 0)) {
              _context.next = 17;
              break;
            }

            _context.t0 = result.push;
            _context.t1 = result;
            _context.t2 = _toConsumableArray2.default;
            _context.next = 14;
            return Promise.all(p);

          case 14:
            _context.t3 = _context.sent;
            _context.t4 = (0, _context.t2)(_context.t3);

            _context.t0.apply.call(_context.t0, _context.t1, _context.t4);

          case 17:
            _context.next = 5;
            break;

          case 19:
            return _context.abrupt("return", result.map(getBlockHeader));

          case 20:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getHeaders.apply(this, arguments);
}

function getBlockHeader(block) {
  var n = new BN(block.number).toArrayLike(Buffer, 'be', 32);
  var ts = new BN(block.timestamp).toArrayLike(Buffer, 'be', 32);

  var txRoot = _ethereumjsUtil.default.toBuffer(block.transactionsRoot);

  var receiptsRoot = _ethereumjsUtil.default.toBuffer(block.receiptsRoot);

  return sha3(Buffer.concat([n, ts, txRoot, receiptsRoot]));
}